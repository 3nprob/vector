// @generated by protobuf-ts 2.0.0-alpha.11 with parameters server_grpc,client_promise,generate_dependencies,optimize_code_size
// @generated from protobuf file "servernode.proto" (package "com.vector", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { Any } from "./any";
/**
 * generic defs
 *
 * @generated from protobuf message com.vector.Empty
 */
export interface Empty {
}
/**
 * @generated from protobuf message com.vector.GenericMessageResponse
 */
export interface GenericMessageResponse {
    /**
     * @generated from protobuf field: string message = 1;
     */
    message: string;
}
/**
 * @generated from protobuf message com.vector.TxHash
 */
export interface TxHash {
    /**
     * @generated from protobuf field: string txHash = 1;
     */
    txHash: string;
}
/**
 * channel update related fields
 *
 * @generated from protobuf message com.vector.CreateUpdateDetails
 */
export interface CreateUpdateDetails {
    /**
     * @generated from protobuf field: string transfer_id = 1;
     */
    transferId: string;
    /**
     * @generated from protobuf field: com.vector.Balance balance = 2;
     */
    balance?: Balance;
    /**
     * @generated from protobuf field: string transfer_definition = 3;
     */
    transferDefinition: string;
    /**
     * @generated from protobuf field: string transfer_timeout = 4;
     */
    transferTimeout: string;
    /**
     * @generated from protobuf field: google.protobuf.Any transfer_initial_state = 5;
     */
    transferInitialState?: Any;
    /**
     * @generated from protobuf field: repeated string transfer_encodings = 6;
     */
    transferEncodings: string[];
    /**
     * @generated from protobuf field: repeated string merkle_proof_data = 7;
     */
    merkleProofData: string[];
    /**
     * @generated from protobuf field: string merkle_root = 8;
     */
    merkleRoot: string;
    /**
     * @generated from protobuf field: optional google.protobuf.Any meta = 9;
     */
    meta?: Any;
}
/**
 * @generated from protobuf message com.vector.ResolveUpdateDetails
 */
export interface ResolveUpdateDetails {
    /**
     * @generated from protobuf field: string transfer_id = 1;
     */
    transferId: string;
    /**
     * @generated from protobuf field: string transfer_definition = 2;
     */
    transferDefinition: string;
    /**
     * @generated from protobuf field: google.protobuf.Any transfer_resolver = 3;
     */
    transferResolver?: Any;
    /**
     * @generated from protobuf field: string merkle_root = 4;
     */
    merkleRoot: string;
    /**
     * @generated from protobuf field: optional google.protobuf.Any meta = 5;
     */
    meta?: Any;
}
/**
 * @generated from protobuf message com.vector.DepositUpdateDetails
 */
export interface DepositUpdateDetails {
    /**
     * @generated from protobuf field: string total_deposits_alice = 1;
     */
    totalDepositsAlice: string;
    /**
     * @generated from protobuf field: string total_deposits_bob = 2;
     */
    totalDepositsBob: string;
    /**
     * @generated from protobuf field: optional google.protobuf.Any meta = 3;
     */
    meta?: Any;
}
/**
 * @generated from protobuf message com.vector.SetupUpdateDetails
 */
export interface SetupUpdateDetails {
    /**
     * @generated from protobuf field: string timeout = 1;
     */
    timeout: string;
    /**
     * @generated from protobuf field: com.vector.NetworkContext network_context = 2;
     */
    networkContext?: NetworkContext;
    /**
     * @generated from protobuf field: optional google.protobuf.Any meta = 3;
     */
    meta?: Any;
}
/**
 * @generated from protobuf message com.vector.ChannelUpdate
 */
export interface ChannelUpdate {
    /**
     * @generated from protobuf field: string channel_address = 1;
     */
    channelAddress: string;
    /**
     * @generated from protobuf field: string from_identifier = 2;
     */
    fromIdentifier: string;
    /**
     * @generated from protobuf field: string to_identifier = 3;
     */
    toIdentifier: string;
    /**
     * @generated from protobuf field: string type = 4;
     */
    type: string;
    /**
     * @generated from protobuf field: int64 nonce = 5;
     */
    nonce: bigint;
    /**
     * @generated from protobuf field: com.vector.Balance balance = 6;
     */
    balance?: Balance;
    /**
     * @generated from protobuf field: string asset_id = 7;
     */
    assetId: string;
    /**
     * @generated from protobuf oneof: details
     */
    details: {
        oneofKind: "setupUpdateDetails";
        /**
         * @generated from protobuf field: com.vector.SetupUpdateDetails setup_update_details = 8;
         */
        setupUpdateDetails: SetupUpdateDetails;
    } | {
        oneofKind: "depositUpdateDetails";
        /**
         * @generated from protobuf field: com.vector.DepositUpdateDetails deposit_update_details = 9;
         */
        depositUpdateDetails: DepositUpdateDetails;
    } | {
        oneofKind: "createUpdateDetails";
        /**
         * @generated from protobuf field: com.vector.CreateUpdateDetails create_update_details = 10;
         */
        createUpdateDetails: CreateUpdateDetails;
    } | {
        oneofKind: "resolveUpdateDetails";
        /**
         * @generated from protobuf field: com.vector.ResolveUpdateDetails resolve_update_details = 11;
         */
        resolveUpdateDetails: ResolveUpdateDetails;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf field: string aliceSignature = 12;
     */
    aliceSignature: string;
    /**
     * @generated from protobuf field: string bob_signature = 13;
     */
    bobSignature: string;
}
/**
 * channel state helpers
 *
 * @generated from protobuf message com.vector.Balance
 */
export interface Balance {
    /**
     * @generated from protobuf field: repeated string amount = 1;
     */
    amount: string[];
    /**
     * @generated from protobuf field: repeated string to = 2;
     */
    to: string[];
}
/**
 * @generated from protobuf message com.vector.Contractstringes
 */
export interface Contractstringes {
    /**
     * @generated from protobuf field: string channel_factory_address = 1;
     */
    channelFactoryAddress: string;
    /**
     * @generated from protobuf field: string transfer_registry_address = 2;
     */
    transferRegistryAddress: string;
}
/**
 * @generated from protobuf message com.vector.NetworkContext
 */
export interface NetworkContext {
    /**
     * @generated from protobuf field: com.vector.Contractstringes contract_addresses = 1;
     */
    contractAddresses?: Contractstringes;
    /**
     * @generated from protobuf field: int32 chain_id = 2;
     */
    chainId: number;
    /**
     * @generated from protobuf field: string provider_url = 3;
     */
    providerUrl: string;
}
/**
 * channel state
 *
 * @generated from protobuf message com.vector.FullChannelState
 */
export interface FullChannelState {
    /**
     * @generated from protobuf field: string channel_address = 1;
     */
    channelAddress: string;
    /**
     * @generated from protobuf field: string alice = 2;
     */
    alice: string;
    /**
     * @generated from protobuf field: string bob = 3;
     */
    bob: string;
    /**
     * @generated from protobuf field: string alice_identifier = 4;
     */
    aliceIdentifier: string;
    /**
     * @generated from protobuf field: string bob_identifier = 5;
     */
    bobIdentifier: string;
    /**
     * @generated from protobuf field: repeated string asset_ids = 6;
     */
    assetIds: string[];
    /**
     * @generated from protobuf field: repeated com.vector.Balance balances = 7;
     */
    balances: Balance[];
    /**
     * @generated from protobuf field: repeated string processed_deposits_a = 8;
     */
    processedDepositsA: string[];
    /**
     * @generated from protobuf field: repeated string processed_deposits_b = 9;
     */
    processedDepositsB: string[];
    /**
     * @generated from protobuf field: repeated string defund_nounces = 10;
     */
    defundNounces: string[];
    /**
     * @generated from protobuf field: int64 nonce = 11;
     */
    nonce: bigint;
    /**
     * @generated from protobuf field: string merkle_root = 12;
     */
    merkleRoot: string;
    /**
     * @generated from protobuf field: bool in_dispute = 13;
     */
    inDispute: boolean;
    /**
     * @generated from protobuf field: com.vector.ChannelUpdate latest_update = 14;
     */
    latestUpdate?: ChannelUpdate;
    /**
     * @generated from protobuf field: com.vector.NetworkContext network_context = 15;
     */
    networkContext?: NetworkContext;
    /**
     * @generated from protobuf field: string timeout = 16;
     */
    timeout: string;
}
/**
 * @generated from protobuf message com.vector.FullChannelStates
 */
export interface FullChannelStates {
    /**
     * @generated from protobuf field: repeated com.vector.FullChannelState full_channel_state = 1;
     */
    fullChannelState: FullChannelState[];
}
/**
 * transfer states
 *
 * @generated from protobuf message com.vector.FullTransferState
 */
export interface FullTransferState {
    /**
     * @generated from protobuf field: string transfer_id = 1;
     */
    transferId: string;
    /**
     * @generated from protobuf field: string channel_address = 2;
     */
    channelAddress: string;
    /**
     * @generated from protobuf field: string transfer_definition = 3;
     */
    transferDefinition: string;
    /**
     * @generated from protobuf field: string initiator = 4;
     */
    initiator: string;
    /**
     * @generated from protobuf field: string responder = 5;
     */
    responder: string;
    /**
     * @generated from protobuf field: string initiator_identifier = 6;
     */
    initiatorIdentifier: string;
    /**
     * @generated from protobuf field: string responder_identifier = 7;
     */
    responderIdentifier: string;
    /**
     * @generated from protobuf field: string asset_id = 8;
     */
    assetId: string;
    /**
     * @generated from protobuf field: com.vector.Balance balance = 9;
     */
    balance?: Balance;
    /**
     * @generated from protobuf field: string transfer_timeout = 10;
     */
    transferTimeout: string;
    /**
     * @generated from protobuf field: string initial_state_hash = 11;
     */
    initialStateHash: string;
    /**
     * @generated from protobuf field: repeated string transfer_encodings = 12;
     */
    transferEncodings: string[];
    /**
     * @generated from protobuf field: google.protobuf.Any transfer_state = 13;
     */
    transferState?: Any;
    /**
     * @generated from protobuf field: google.protobuf.Any transfer_resolver = 14;
     */
    transferResolver?: Any;
    /**
     * @generated from protobuf field: bool in_dispute = 15;
     */
    inDispute: boolean;
    /**
     * @generated from protobuf field: int64 channel_nonce = 16;
     */
    channelNonce: bigint;
    /**
     * @generated from protobuf field: optional google.protobuf.Any meta = 17;
     */
    meta?: Any;
}
/**
 * @generated from protobuf message com.vector.FullTransferStates
 */
export interface FullTransferStates {
    /**
     * @generated from protobuf field: repeated com.vector.FullTransferState full_transfer_state = 1;
     */
    fullTransferState: FullTransferState[];
}
/**
 * requests
 *
 * @generated from protobuf message com.vector.GetStatusRequest
 */
export interface GetStatusRequest {
    /**
     * @generated from protobuf field: string public_identifier = 1;
     */
    publicIdentifier: string;
}
/**
 * @generated from protobuf message com.vector.ConditionalTransferRequest
 */
export interface ConditionalTransferRequest {
    /**
     * @generated from protobuf field: string public_identifier = 1;
     */
    publicIdentifier: string;
    /**
     * @generated from protobuf field: string channel_address = 2;
     */
    channelAddress: string;
    /**
     * @generated from protobuf field: string amount = 3;
     */
    amount: string;
    /**
     * @generated from protobuf field: string asset_id = 4;
     */
    assetId: string;
    /**
     * @generated from protobuf field: string recipient = 5;
     */
    recipient: string;
    /**
     * @generated from protobuf field: int32 recipient_chainId = 6;
     */
    recipientChainId: number;
    /**
     * @generated from protobuf field: string recipient_assetId = 7;
     */
    recipientAssetId: string;
    /**
     * @generated from protobuf field: string timeout = 8;
     */
    timeout: string;
    /**
     * @generated from protobuf field: string type = 9;
     */
    type: string;
    /**
     * @generated from protobuf field: google.protobuf.Any details = 10;
     */
    details?: Any;
    /**
     * @generated from protobuf field: optional google.protobuf.Any meta = 11;
     */
    meta?: Any;
}
/**
 * @generated from protobuf message com.vector.CollateralRequest
 */
export interface CollateralRequest {
    /**
     * @generated from protobuf field: string public_identifier = 1;
     */
    publicIdentifier: string;
    /**
     * @generated from protobuf field: string channel_address = 2;
     */
    channelAddress: string;
    /**
     * @generated from protobuf field: string asset_id = 3;
     */
    assetId: string;
    /**
     * @generated from protobuf field: string amount = 4;
     */
    amount: string;
}
/**
 * @generated from protobuf message com.vector.DepositRequest
 */
export interface DepositRequest {
    /**
     * @generated from protobuf field: string public_identifier = 1;
     */
    publicIdentifier: string;
    /**
     * @generated from protobuf field: string channel_address = 2;
     */
    channelAddress: string;
    /**
     * @generated from protobuf field: string asset_id = 3;
     */
    assetId: string;
    /**
     * @generated from protobuf field: optional google.protobuf.Any meta = 4;
     */
    meta?: Any;
}
/**
 * @generated from protobuf message com.vector.TransferRequest
 */
export interface TransferRequest {
    /**
     * @generated from protobuf field: string public_identifier = 1;
     */
    publicIdentifier: string;
    /**
     * @generated from protobuf field: string transfer_id = 2;
     */
    transferId: string;
}
/**
 * @generated from protobuf message com.vector.ChannelStateRequest
 */
export interface ChannelStateRequest {
    /**
     * @generated from protobuf field: string public_identifier = 1;
     */
    publicIdentifier: string;
    /**
     * @generated from protobuf field: string channel_address = 2;
     */
    channelAddress: string;
}
/**
 * @generated from protobuf message com.vector.DepositTxRequest
 */
export interface DepositTxRequest {
    /**
     * @generated from protobuf field: string channel_address = 1;
     */
    channelAddress: string;
    /**
     * @generated from protobuf field: string amount = 2;
     */
    amount: string;
    /**
     * @generated from protobuf field: string asset_id = 3;
     */
    assetId: string;
    /**
     * @generated from protobuf field: int32 chain_id = 4;
     */
    chainId: number;
    /**
     * @generated from protobuf field: string public_identifier = 5;
     */
    publicIdentifier: string;
}
/**
 * @generated from protobuf message com.vector.SetupRequest
 */
export interface SetupRequest {
    /**
     * @generated from protobuf field: string public_identifier = 1;
     */
    publicIdentifier: string;
    /**
     * @generated from protobuf field: string counterparty_identifier = 2;
     */
    counterpartyIdentifier: string;
    /**
     * @generated from protobuf field: int32 chain_id = 3;
     */
    chainId: number;
    /**
     * @generated from protobuf field: string timeout = 4;
     */
    timeout: string;
    /**
     * @generated from protobuf field: optional google.protobuf.Any meta = 5;
     */
    meta?: Any;
}
/**
 * @generated from protobuf message com.vector.RegisteredTransfersRequest
 */
export interface RegisteredTransfersRequest {
    /**
     * @generated from protobuf field: string public_identifier = 1;
     */
    publicIdentifier: string;
    /**
     * @generated from protobuf field: int32 chain_id = 2;
     */
    chainId: number;
}
/**
 * @generated from protobuf message com.vector.ChannelStatesRequest
 */
export interface ChannelStatesRequest {
    /**
     * @generated from protobuf field: string public_identifier = 1;
     */
    publicIdentifier: string;
}
/**
 * @generated from protobuf message com.vector.ActiveTransfersRequest
 */
export interface ActiveTransfersRequest {
    /**
     * @generated from protobuf field: string public_identifier = 1;
     */
    publicIdentifier: string;
    /**
     * @generated from protobuf field: string channel_address = 2;
     */
    channelAddress: string;
}
/**
 * @generated from protobuf message com.vector.TransferStatesByRoutingIdRequest
 */
export interface TransferStatesByRoutingIdRequest {
    /**
     * @generated from protobuf field: string public_identifier = 1;
     */
    publicIdentifier: string;
    /**
     * @generated from protobuf field: string channel_address = 2;
     */
    channelAddress: string;
    /**
     * @generated from protobuf field: bytes routing_id = 3;
     */
    routingId: Uint8Array;
}
/**
 * @generated from protobuf message com.vector.TransferStateByRoutingIdRequest
 */
export interface TransferStateByRoutingIdRequest {
    /**
     * @generated from protobuf field: string public_identifier = 1;
     */
    publicIdentifier: string;
    /**
     * @generated from protobuf field: bytes routing_id = 2;
     */
    routingId: Uint8Array;
}
/**
 * @generated from protobuf message com.vector.TransfersRequest
 */
export interface TransfersRequest {
    /**
     * @generated from protobuf field: string public_identifier = 1;
     */
    publicIdentifier: string;
    /**
     * @generated from protobuf field: bytes transfer_id = 2;
     */
    transferId: Uint8Array;
}
/**
 * @generated from protobuf message com.vector.ChannelStateByParticipantsRequest
 */
export interface ChannelStateByParticipantsRequest {
    /**
     * @generated from protobuf field: string public_identifier = 1;
     */
    publicIdentifier: string;
    /**
     * @generated from protobuf field: string counterparty = 2;
     */
    counterparty: string;
    /**
     * @generated from protobuf field: int32 chain_id = 3;
     */
    chainId: number;
}
/**
 * @generated from protobuf message com.vector.WithdrawRequest
 */
export interface WithdrawRequest {
    /**
     * @generated from protobuf field: string public_identifier = 1;
     */
    publicIdentifier: string;
    /**
     * @generated from protobuf field: string channel_address = 2;
     */
    channelAddress: string;
    /**
     * @generated from protobuf field: string amount = 3;
     */
    amount: string;
    /**
     * @generated from protobuf field: string asset_id = 4;
     */
    assetId: string;
    /**
     * @generated from protobuf field: string recipient = 5;
     */
    recipient: string;
    /**
     * @generated from protobuf field: string fee = 6;
     */
    fee: string;
    /**
     * @generated from protobuf field: string call_to = 7;
     */
    callTo: string;
    /**
     * @generated from protobuf field: string call_data = 8;
     */
    callData: string;
    /**
     * @generated from protobuf field: optional google.protobuf.Any meta = 9;
     */
    meta?: Any;
}
/**
 * @generated from protobuf message com.vector.ResolveTransferRequest
 */
export interface ResolveTransferRequest {
    /**
     * @generated from protobuf field: string public_identifier = 1;
     */
    publicIdentifier: string;
    /**
     * @generated from protobuf field: string channel_address = 2;
     */
    channelAddress: string;
    /**
     * @generated from protobuf field: bytes transfer_id = 3;
     */
    transferId: Uint8Array;
    /**
     * @generated from protobuf field: google.protobuf.Any transfer_resolver = 4;
     */
    transferResolver?: Any;
    /**
     * @generated from protobuf field: optional google.protobuf.Any meta = 5;
     */
    meta?: Any;
}
/**
 * @generated from protobuf message com.vector.Body
 */
export interface Body {
    /**
     * @generated from protobuf field: string method = 1;
     */
    method: string;
    /**
     * @generated from protobuf field: google.protobuf.Any params = 2;
     */
    params?: Any;
}
/**
 * @generated from protobuf message com.vector.EthProviderRequest
 */
export interface EthProviderRequest {
    /**
     * @generated from protobuf field: int32 chain_id = 1;
     */
    chainId: number;
    /**
     * @generated from protobuf field: com.vector.Body body = 2;
     */
    body?: Body;
}
/**
 * responses
 *
 * @generated from protobuf message com.vector.RestoreStateReply
 */
export interface RestoreStateReply {
    /**
     * @generated from protobuf field: string channel_address = 1;
     */
    channelAddress: string;
}
/**
 * @generated from protobuf message com.vector.WithdrawReply
 */
export interface WithdrawReply {
    /**
     * @generated from protobuf field: string channel_address = 1;
     */
    channelAddress: string;
    /**
     * @generated from protobuf field: bytes transfer_id = 2;
     */
    transferId: Uint8Array;
    /**
     * @generated from protobuf field: bytes transaction_hash = 3;
     */
    transactionHash: Uint8Array;
}
/**
 * @generated from protobuf message com.vector.EthProviderReply
 */
export interface EthProviderReply {
    /**
     * @generated from protobuf field: google.protobuf.Any response = 1;
     */
    response?: Any;
}
/**
 * @generated from protobuf message com.vector.Configs
 */
export interface Configs {
    /**
     * @generated from protobuf field: repeated com.vector.Config config = 1;
     */
    config: Config[];
}
/**
 * @generated from protobuf message com.vector.Config
 */
export interface Config {
    /**
     * @generated from protobuf field: int32 index = 1;
     */
    index: number;
    /**
     * @generated from protobuf field: string public_identifier = 2;
     */
    publicIdentifier: string;
    /**
     * @generated from protobuf field: string signer_address = 3;
     */
    signerAddress: string;
}
/**
 * @generated from protobuf message com.vector.RouterConfig
 */
export interface RouterConfig {
    /**
     * @generated from protobuf field: repeated int32 supported_chains = 1;
     */
    supportedChains: number[];
}
/**
 * @generated from protobuf message com.vector.ProviderSyncing
 */
export interface ProviderSyncing {
    /**
     * @generated from protobuf field: bool syncing = 1;
     */
    syncing: boolean;
    /**
     * @generated from protobuf field: string starting_block = 2;
     */
    startingBlock: string;
    /**
     * @generated from protobuf field: string current_block = 3;
     */
    currentBlock: string;
    /**
     * @generated from protobuf field: string highest_block = 4;
     */
    highestBlock: string;
}
/**
 * @generated from protobuf message com.vector.Status
 */
export interface Status {
    /**
     * @generated from protobuf field: map<int32, com.vector.ProviderSyncing> provider_syncing = 1;
     */
    providerSyncing: {
        [key: number]: ProviderSyncing;
    };
    /**
     * @generated from protobuf field: string public_identifier = 2;
     */
    publicIdentifier: string;
    /**
     * @generated from protobuf field: string signer_address = 3;
     */
    signerAddress: string;
    /**
     * @generated from protobuf field: string version = 4;
     */
    version: string;
}
/**
 * @generated from protobuf message com.vector.RegisteredTransfer
 */
export interface RegisteredTransfer {
    /**
     * @generated from protobuf field: string state_encoding = 1;
     */
    stateEncoding: string;
    /**
     * @generated from protobuf field: string resolver_encoding = 2;
     */
    resolverEncoding: string;
    /**
     * @generated from protobuf field: string definition = 3;
     */
    definition: string;
    /**
     * @generated from protobuf field: string name = 4;
     */
    name: string;
    /**
     * @generated from protobuf field: string encoded_cancel = 5;
     */
    encodedCancel: string;
}
/**
 * @generated from protobuf message com.vector.RegisteredTransfers
 */
export interface RegisteredTransfers {
    /**
     * @generated from protobuf field: repeated com.vector.RegisteredTransfer registered_transfer = 1;
     */
    registeredTransfer: RegisteredTransfer[];
}
/**
 * event payloads
 *
 * @generated from protobuf message com.vector.IsAlivePayload
 */
export interface IsAlivePayload {
    /**
     * @generated from protobuf field: string channel_address = 1;
     */
    channelAddress: string;
    /**
     * @generated from protobuf field: string alice_identifier = 2;
     */
    aliceIdentifier: string;
    /**
     * @generated from protobuf field: string bob_identifier = 3;
     */
    bobIdentifier: string;
    /**
     * @generated from protobuf field: int32 chain_id = 4;
     */
    chainId: number;
    /**
     * @generated from protobuf field: optional bool skip_check_in = 5;
     */
    skipCheckIn?: boolean;
}
/**
 * @generated from protobuf message com.vector.SetupPayload
 */
export interface SetupPayload {
    /**
     * @generated from protobuf field: string channel_address = 1;
     */
    channelAddress: string;
    /**
     * @generated from protobuf field: string alice_identifier = 2;
     */
    aliceIdentifier: string;
    /**
     * @generated from protobuf field: string bob_identifier = 3;
     */
    bobIdentifier: string;
    /**
     * @generated from protobuf field: int32 chain_id = 4;
     */
    chainId: number;
    /**
     * @generated from protobuf field: optional google.protobuf.Any meta = 5;
     */
    meta?: Any;
}
/**
 * @generated from protobuf message com.vector.ConditionalTransferCreatedPayload
 */
export interface ConditionalTransferCreatedPayload {
    /**
     * @generated from protobuf field: string channel_address = 1;
     */
    channelAddress: string;
    /**
     * @generated from protobuf field: string alice_identifier = 2;
     */
    aliceIdentifier: string;
    /**
     * @generated from protobuf field: string bob_identifier = 3;
     */
    bobIdentifier: string;
    /**
     * @generated from protobuf field: com.vector.FullTransferState transfer = 4;
     */
    transfer?: FullTransferState;
    /**
     * @generated from protobuf field: com.vector.Balance channel_balance = 5;
     */
    channelBalance?: Balance;
    /**
     * @generated from protobuf field: string condition_type = 6;
     */
    conditionType: string;
    /**
     * @generated from protobuf field: repeated string active_transfer_ids = 7;
     */
    activeTransferIds: string[];
    /**
     * @generated from protobuf field: optional google.protobuf.Any meta = 8;
     */
    meta?: Any;
}
/**
 * @generated from protobuf message com.vector.DepositReconciledPayload
 */
export interface DepositReconciledPayload {
    /**
     * @generated from protobuf field: string channel_address = 1;
     */
    channelAddress: string;
    /**
     * @generated from protobuf field: string alice_identifier = 2;
     */
    aliceIdentifier: string;
    /**
     * @generated from protobuf field: string bob_identifier = 3;
     */
    bobIdentifier: string;
    /**
     * @generated from protobuf field: string asset_id = 4;
     */
    assetId: string;
    /**
     * @generated from protobuf field: com.vector.Balance channel_balance = 5;
     */
    channelBalance?: Balance;
    /**
     * @generated from protobuf field: optional google.protobuf.Any meta = 6;
     */
    meta?: Any;
}
/**
 * @generated from protobuf message com.vector.RequestCollateralPayload
 */
export interface RequestCollateralPayload {
    /**
     * @generated from protobuf field: string channel_address = 1;
     */
    channelAddress: string;
    /**
     * @generated from protobuf field: string alice_identifier = 2;
     */
    aliceIdentifier: string;
    /**
     * @generated from protobuf field: string bob_identifier = 3;
     */
    bobIdentifier: string;
    /**
     * @generated from protobuf field: string asset_id = 4;
     */
    assetId: string;
    /**
     * @generated from protobuf field: optional string amount = 5;
     */
    amount?: string;
    /**
     * @generated from protobuf field: optional google.protobuf.Any meta = 6;
     */
    meta?: Any;
}
/**
 * @generated from protobuf message com.vector.WithdrawalCreatedPayload
 */
export interface WithdrawalCreatedPayload {
    /**
     * @generated from protobuf field: string channel_address = 1;
     */
    channelAddress: string;
    /**
     * @generated from protobuf field: string alice_identifier = 2;
     */
    aliceIdentifier: string;
    /**
     * @generated from protobuf field: string bob_identifier = 3;
     */
    bobIdentifier: string;
    /**
     * @generated from protobuf field: com.vector.FullTransferState transfer = 4;
     */
    transfer?: FullTransferState;
    /**
     * @generated from protobuf field: string fee = 5;
     */
    fee: string;
    /**
     * @generated from protobuf field: string asset_id = 6;
     */
    assetId: string;
    /**
     * @generated from protobuf field: string amount = 7;
     */
    amount: string;
    /**
     * @generated from protobuf field: string recipient = 8;
     */
    recipient: string;
    /**
     * @generated from protobuf field: string call_to = 9;
     */
    callTo: string;
    /**
     * @generated from protobuf field: string call_data = 10;
     */
    callData: string;
    /**
     * @generated from protobuf field: com.vector.Balance channel_balance = 11;
     */
    channelBalance?: Balance;
    /**
     * @generated from protobuf field: optional google.protobuf.Any meta = 12;
     */
    meta?: Any;
}
/**
 * @generated from protobuf message com.vector.WithdrawalReconciledPayload
 */
export interface WithdrawalReconciledPayload {
    /**
     * @generated from protobuf field: string channel_address = 1;
     */
    channelAddress: string;
    /**
     * @generated from protobuf field: string alice_identifier = 2;
     */
    aliceIdentifier: string;
    /**
     * @generated from protobuf field: string bob_identifier = 3;
     */
    bobIdentifier: string;
    /**
     * @generated from protobuf field: string transaction_hash = 4;
     */
    transactionHash: string;
    /**
     * @generated from protobuf field: string transfer_id = 5;
     */
    transferId: string;
    /**
     * @generated from protobuf field: optional google.protobuf.Any meta = 6;
     */
    meta?: Any;
}
/**
 * @generated from protobuf message com.vector.CreateNodeRequest
 */
export interface CreateNodeRequest {
    /**
     * @generated from protobuf field: int32 index = 1;
     */
    index: number;
    /**
     * @generated from protobuf field: string mnemonic = 2;
     */
    mnemonic: string;
    /**
     * @generated from protobuf field: bool skipCheckIn = 3;
     */
    skipCheckIn: boolean;
}
/**
 * @generated from protobuf message com.vector.CreateNodeReply
 */
export interface CreateNodeReply {
    /**
     * @generated from protobuf field: string public_identifier = 1;
     */
    publicIdentifier: string;
    /**
     * @generated from protobuf field: string signer_address = 2;
     */
    signerAddress: string;
    /**
     * @generated from protobuf field: int32 index = 3;
     */
    index: number;
}
/**
 * @generated from protobuf message com.vector.ClearStoreRequest
 */
export interface ClearStoreRequest {
    /**
     * @generated from protobuf field: string admin_token = 1;
     */
    adminToken: string;
}
/**
 * @generated from protobuf message com.vector.RestoreStateRequest
 */
export interface RestoreStateRequest {
    /**
     * @generated from protobuf field: string counterparty_identifier = 1;
     */
    counterpartyIdentifier: string;
    /**
     * @generated from protobuf field: string chain_id = 2;
     */
    chainId: string;
    /**
     * @generated from protobuf field: string public_identifier = 3;
     */
    publicIdentifier: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class Empty$Type extends MessageType<Empty> {
    constructor() {
        super("com.vector.Empty", []);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.Empty
 */
export const Empty = new Empty$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenericMessageResponse$Type extends MessageType<GenericMessageResponse> {
    constructor() {
        super("com.vector.GenericMessageResponse", [
            { no: 1, name: "message", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.GenericMessageResponse
 */
export const GenericMessageResponse = new GenericMessageResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TxHash$Type extends MessageType<TxHash> {
    constructor() {
        super("com.vector.TxHash", [
            { no: 1, name: "txHash", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.TxHash
 */
export const TxHash = new TxHash$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateUpdateDetails$Type extends MessageType<CreateUpdateDetails> {
    constructor() {
        super("com.vector.CreateUpdateDetails", [
            { no: 1, name: "transfer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "balance", kind: "message", T: () => Balance },
            { no: 3, name: "transfer_definition", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "transfer_timeout", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "transfer_initial_state", kind: "message", T: () => Any },
            { no: 6, name: "transfer_encodings", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "merkle_proof_data", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "merkle_root", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "meta", kind: "message", T: () => Any }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.CreateUpdateDetails
 */
export const CreateUpdateDetails = new CreateUpdateDetails$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResolveUpdateDetails$Type extends MessageType<ResolveUpdateDetails> {
    constructor() {
        super("com.vector.ResolveUpdateDetails", [
            { no: 1, name: "transfer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "transfer_definition", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "transfer_resolver", kind: "message", T: () => Any },
            { no: 4, name: "merkle_root", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "meta", kind: "message", T: () => Any }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.ResolveUpdateDetails
 */
export const ResolveUpdateDetails = new ResolveUpdateDetails$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DepositUpdateDetails$Type extends MessageType<DepositUpdateDetails> {
    constructor() {
        super("com.vector.DepositUpdateDetails", [
            { no: 1, name: "total_deposits_alice", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "total_deposits_bob", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "meta", kind: "message", T: () => Any }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.DepositUpdateDetails
 */
export const DepositUpdateDetails = new DepositUpdateDetails$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetupUpdateDetails$Type extends MessageType<SetupUpdateDetails> {
    constructor() {
        super("com.vector.SetupUpdateDetails", [
            { no: 1, name: "timeout", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "network_context", kind: "message", T: () => NetworkContext },
            { no: 3, name: "meta", kind: "message", T: () => Any }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.SetupUpdateDetails
 */
export const SetupUpdateDetails = new SetupUpdateDetails$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChannelUpdate$Type extends MessageType<ChannelUpdate> {
    constructor() {
        super("com.vector.ChannelUpdate", [
            { no: 1, name: "channel_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "from_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "to_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "nonce", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "balance", kind: "message", T: () => Balance },
            { no: 7, name: "asset_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "setup_update_details", kind: "message", oneof: "details", T: () => SetupUpdateDetails },
            { no: 9, name: "deposit_update_details", kind: "message", oneof: "details", T: () => DepositUpdateDetails },
            { no: 10, name: "create_update_details", kind: "message", oneof: "details", T: () => CreateUpdateDetails },
            { no: 11, name: "resolve_update_details", kind: "message", oneof: "details", T: () => ResolveUpdateDetails },
            { no: 12, name: "aliceSignature", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "bob_signature", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.ChannelUpdate
 */
export const ChannelUpdate = new ChannelUpdate$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Balance$Type extends MessageType<Balance> {
    constructor() {
        super("com.vector.Balance", [
            { no: 1, name: "amount", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "to", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.Balance
 */
export const Balance = new Balance$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Contractstringes$Type extends MessageType<Contractstringes> {
    constructor() {
        super("com.vector.Contractstringes", [
            { no: 1, name: "channel_factory_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "transfer_registry_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.Contractstringes
 */
export const Contractstringes = new Contractstringes$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NetworkContext$Type extends MessageType<NetworkContext> {
    constructor() {
        super("com.vector.NetworkContext", [
            { no: 1, name: "contract_addresses", kind: "message", T: () => Contractstringes },
            { no: 2, name: "chain_id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "provider_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.NetworkContext
 */
export const NetworkContext = new NetworkContext$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FullChannelState$Type extends MessageType<FullChannelState> {
    constructor() {
        super("com.vector.FullChannelState", [
            { no: 1, name: "channel_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "alice", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "bob", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "alice_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "bob_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "asset_ids", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "balances", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Balance },
            { no: 8, name: "processed_deposits_a", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "processed_deposits_b", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "defund_nounces", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "nonce", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 12, name: "merkle_root", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "in_dispute", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 14, name: "latest_update", kind: "message", T: () => ChannelUpdate },
            { no: 15, name: "network_context", kind: "message", T: () => NetworkContext },
            { no: 16, name: "timeout", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.FullChannelState
 */
export const FullChannelState = new FullChannelState$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FullChannelStates$Type extends MessageType<FullChannelStates> {
    constructor() {
        super("com.vector.FullChannelStates", [
            { no: 1, name: "full_channel_state", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FullChannelState }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.FullChannelStates
 */
export const FullChannelStates = new FullChannelStates$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FullTransferState$Type extends MessageType<FullTransferState> {
    constructor() {
        super("com.vector.FullTransferState", [
            { no: 1, name: "transfer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "channel_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "transfer_definition", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "initiator", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "responder", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "initiator_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "responder_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "asset_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "balance", kind: "message", T: () => Balance },
            { no: 10, name: "transfer_timeout", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "initial_state_hash", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "transfer_encodings", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "transfer_state", kind: "message", T: () => Any },
            { no: 14, name: "transfer_resolver", kind: "message", T: () => Any },
            { no: 15, name: "in_dispute", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 16, name: "channel_nonce", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 17, name: "meta", kind: "message", T: () => Any }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.FullTransferState
 */
export const FullTransferState = new FullTransferState$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FullTransferStates$Type extends MessageType<FullTransferStates> {
    constructor() {
        super("com.vector.FullTransferStates", [
            { no: 1, name: "full_transfer_state", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FullTransferState }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.FullTransferStates
 */
export const FullTransferStates = new FullTransferStates$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetStatusRequest$Type extends MessageType<GetStatusRequest> {
    constructor() {
        super("com.vector.GetStatusRequest", [
            { no: 1, name: "public_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.GetStatusRequest
 */
export const GetStatusRequest = new GetStatusRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ConditionalTransferRequest$Type extends MessageType<ConditionalTransferRequest> {
    constructor() {
        super("com.vector.ConditionalTransferRequest", [
            { no: 1, name: "public_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "channel_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "amount", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "asset_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "recipient", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "recipient_chainId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "recipient_assetId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "timeout", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "details", kind: "message", T: () => Any },
            { no: 11, name: "meta", kind: "message", T: () => Any }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.ConditionalTransferRequest
 */
export const ConditionalTransferRequest = new ConditionalTransferRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CollateralRequest$Type extends MessageType<CollateralRequest> {
    constructor() {
        super("com.vector.CollateralRequest", [
            { no: 1, name: "public_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "channel_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "asset_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "amount", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.CollateralRequest
 */
export const CollateralRequest = new CollateralRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DepositRequest$Type extends MessageType<DepositRequest> {
    constructor() {
        super("com.vector.DepositRequest", [
            { no: 1, name: "public_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "channel_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "asset_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "meta", kind: "message", T: () => Any }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.DepositRequest
 */
export const DepositRequest = new DepositRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TransferRequest$Type extends MessageType<TransferRequest> {
    constructor() {
        super("com.vector.TransferRequest", [
            { no: 1, name: "public_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "transfer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.TransferRequest
 */
export const TransferRequest = new TransferRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChannelStateRequest$Type extends MessageType<ChannelStateRequest> {
    constructor() {
        super("com.vector.ChannelStateRequest", [
            { no: 1, name: "public_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "channel_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.ChannelStateRequest
 */
export const ChannelStateRequest = new ChannelStateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DepositTxRequest$Type extends MessageType<DepositTxRequest> {
    constructor() {
        super("com.vector.DepositTxRequest", [
            { no: 1, name: "channel_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "amount", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "asset_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "chain_id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "public_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.DepositTxRequest
 */
export const DepositTxRequest = new DepositTxRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetupRequest$Type extends MessageType<SetupRequest> {
    constructor() {
        super("com.vector.SetupRequest", [
            { no: 1, name: "public_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "counterparty_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "chain_id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "timeout", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "meta", kind: "message", T: () => Any }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.SetupRequest
 */
export const SetupRequest = new SetupRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RegisteredTransfersRequest$Type extends MessageType<RegisteredTransfersRequest> {
    constructor() {
        super("com.vector.RegisteredTransfersRequest", [
            { no: 1, name: "public_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "chain_id", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.RegisteredTransfersRequest
 */
export const RegisteredTransfersRequest = new RegisteredTransfersRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChannelStatesRequest$Type extends MessageType<ChannelStatesRequest> {
    constructor() {
        super("com.vector.ChannelStatesRequest", [
            { no: 1, name: "public_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.ChannelStatesRequest
 */
export const ChannelStatesRequest = new ChannelStatesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ActiveTransfersRequest$Type extends MessageType<ActiveTransfersRequest> {
    constructor() {
        super("com.vector.ActiveTransfersRequest", [
            { no: 1, name: "public_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "channel_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.ActiveTransfersRequest
 */
export const ActiveTransfersRequest = new ActiveTransfersRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TransferStatesByRoutingIdRequest$Type extends MessageType<TransferStatesByRoutingIdRequest> {
    constructor() {
        super("com.vector.TransferStatesByRoutingIdRequest", [
            { no: 1, name: "public_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "channel_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "routing_id", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.TransferStatesByRoutingIdRequest
 */
export const TransferStatesByRoutingIdRequest = new TransferStatesByRoutingIdRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TransferStateByRoutingIdRequest$Type extends MessageType<TransferStateByRoutingIdRequest> {
    constructor() {
        super("com.vector.TransferStateByRoutingIdRequest", [
            { no: 1, name: "public_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "routing_id", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.TransferStateByRoutingIdRequest
 */
export const TransferStateByRoutingIdRequest = new TransferStateByRoutingIdRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TransfersRequest$Type extends MessageType<TransfersRequest> {
    constructor() {
        super("com.vector.TransfersRequest", [
            { no: 1, name: "public_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "transfer_id", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.TransfersRequest
 */
export const TransfersRequest = new TransfersRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChannelStateByParticipantsRequest$Type extends MessageType<ChannelStateByParticipantsRequest> {
    constructor() {
        super("com.vector.ChannelStateByParticipantsRequest", [
            { no: 1, name: "public_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "counterparty", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "chain_id", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.ChannelStateByParticipantsRequest
 */
export const ChannelStateByParticipantsRequest = new ChannelStateByParticipantsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WithdrawRequest$Type extends MessageType<WithdrawRequest> {
    constructor() {
        super("com.vector.WithdrawRequest", [
            { no: 1, name: "public_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "channel_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "amount", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "asset_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "recipient", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "fee", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "call_to", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "call_data", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "meta", kind: "message", T: () => Any }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.WithdrawRequest
 */
export const WithdrawRequest = new WithdrawRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResolveTransferRequest$Type extends MessageType<ResolveTransferRequest> {
    constructor() {
        super("com.vector.ResolveTransferRequest", [
            { no: 1, name: "public_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "channel_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "transfer_id", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 4, name: "transfer_resolver", kind: "message", T: () => Any },
            { no: 5, name: "meta", kind: "message", T: () => Any }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.ResolveTransferRequest
 */
export const ResolveTransferRequest = new ResolveTransferRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Body$Type extends MessageType<Body> {
    constructor() {
        super("com.vector.Body", [
            { no: 1, name: "method", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "params", kind: "message", T: () => Any }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.Body
 */
export const Body = new Body$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EthProviderRequest$Type extends MessageType<EthProviderRequest> {
    constructor() {
        super("com.vector.EthProviderRequest", [
            { no: 1, name: "chain_id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "body", kind: "message", T: () => Body }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.EthProviderRequest
 */
export const EthProviderRequest = new EthProviderRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RestoreStateReply$Type extends MessageType<RestoreStateReply> {
    constructor() {
        super("com.vector.RestoreStateReply", [
            { no: 1, name: "channel_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.RestoreStateReply
 */
export const RestoreStateReply = new RestoreStateReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WithdrawReply$Type extends MessageType<WithdrawReply> {
    constructor() {
        super("com.vector.WithdrawReply", [
            { no: 1, name: "channel_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "transfer_id", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 3, name: "transaction_hash", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.WithdrawReply
 */
export const WithdrawReply = new WithdrawReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EthProviderReply$Type extends MessageType<EthProviderReply> {
    constructor() {
        super("com.vector.EthProviderReply", [
            { no: 1, name: "response", kind: "message", T: () => Any }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.EthProviderReply
 */
export const EthProviderReply = new EthProviderReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Configs$Type extends MessageType<Configs> {
    constructor() {
        super("com.vector.Configs", [
            { no: 1, name: "config", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Config }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.Configs
 */
export const Configs = new Configs$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Config$Type extends MessageType<Config> {
    constructor() {
        super("com.vector.Config", [
            { no: 1, name: "index", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "public_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "signer_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.Config
 */
export const Config = new Config$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RouterConfig$Type extends MessageType<RouterConfig> {
    constructor() {
        super("com.vector.RouterConfig", [
            { no: 1, name: "supported_chains", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.RouterConfig
 */
export const RouterConfig = new RouterConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ProviderSyncing$Type extends MessageType<ProviderSyncing> {
    constructor() {
        super("com.vector.ProviderSyncing", [
            { no: 1, name: "syncing", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "starting_block", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "current_block", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "highest_block", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.ProviderSyncing
 */
export const ProviderSyncing = new ProviderSyncing$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Status$Type extends MessageType<Status> {
    constructor() {
        super("com.vector.Status", [
            { no: 1, name: "provider_syncing", kind: "map", K: 5 /*ScalarType.INT32*/, V: { kind: "message", T: () => ProviderSyncing } },
            { no: 2, name: "public_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "signer_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "version", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.Status
 */
export const Status = new Status$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RegisteredTransfer$Type extends MessageType<RegisteredTransfer> {
    constructor() {
        super("com.vector.RegisteredTransfer", [
            { no: 1, name: "state_encoding", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "resolver_encoding", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "definition", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "encoded_cancel", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.RegisteredTransfer
 */
export const RegisteredTransfer = new RegisteredTransfer$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RegisteredTransfers$Type extends MessageType<RegisteredTransfers> {
    constructor() {
        super("com.vector.RegisteredTransfers", [
            { no: 1, name: "registered_transfer", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => RegisteredTransfer }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.RegisteredTransfers
 */
export const RegisteredTransfers = new RegisteredTransfers$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IsAlivePayload$Type extends MessageType<IsAlivePayload> {
    constructor() {
        super("com.vector.IsAlivePayload", [
            { no: 1, name: "channel_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "alice_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "bob_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "chain_id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "skip_check_in", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.IsAlivePayload
 */
export const IsAlivePayload = new IsAlivePayload$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetupPayload$Type extends MessageType<SetupPayload> {
    constructor() {
        super("com.vector.SetupPayload", [
            { no: 1, name: "channel_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "alice_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "bob_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "chain_id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "meta", kind: "message", T: () => Any }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.SetupPayload
 */
export const SetupPayload = new SetupPayload$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ConditionalTransferCreatedPayload$Type extends MessageType<ConditionalTransferCreatedPayload> {
    constructor() {
        super("com.vector.ConditionalTransferCreatedPayload", [
            { no: 1, name: "channel_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "alice_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "bob_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "transfer", kind: "message", T: () => FullTransferState },
            { no: 5, name: "channel_balance", kind: "message", T: () => Balance },
            { no: 6, name: "condition_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "active_transfer_ids", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "meta", kind: "message", T: () => Any }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.ConditionalTransferCreatedPayload
 */
export const ConditionalTransferCreatedPayload = new ConditionalTransferCreatedPayload$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DepositReconciledPayload$Type extends MessageType<DepositReconciledPayload> {
    constructor() {
        super("com.vector.DepositReconciledPayload", [
            { no: 1, name: "channel_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "alice_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "bob_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "asset_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "channel_balance", kind: "message", T: () => Balance },
            { no: 6, name: "meta", kind: "message", T: () => Any }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.DepositReconciledPayload
 */
export const DepositReconciledPayload = new DepositReconciledPayload$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RequestCollateralPayload$Type extends MessageType<RequestCollateralPayload> {
    constructor() {
        super("com.vector.RequestCollateralPayload", [
            { no: 1, name: "channel_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "alice_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "bob_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "asset_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "amount", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "meta", kind: "message", T: () => Any }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.RequestCollateralPayload
 */
export const RequestCollateralPayload = new RequestCollateralPayload$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WithdrawalCreatedPayload$Type extends MessageType<WithdrawalCreatedPayload> {
    constructor() {
        super("com.vector.WithdrawalCreatedPayload", [
            { no: 1, name: "channel_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "alice_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "bob_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "transfer", kind: "message", T: () => FullTransferState },
            { no: 5, name: "fee", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "asset_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "amount", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "recipient", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "call_to", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "call_data", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "channel_balance", kind: "message", T: () => Balance },
            { no: 12, name: "meta", kind: "message", T: () => Any }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.WithdrawalCreatedPayload
 */
export const WithdrawalCreatedPayload = new WithdrawalCreatedPayload$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WithdrawalReconciledPayload$Type extends MessageType<WithdrawalReconciledPayload> {
    constructor() {
        super("com.vector.WithdrawalReconciledPayload", [
            { no: 1, name: "channel_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "alice_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "bob_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "transaction_hash", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "transfer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "meta", kind: "message", T: () => Any }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.WithdrawalReconciledPayload
 */
export const WithdrawalReconciledPayload = new WithdrawalReconciledPayload$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateNodeRequest$Type extends MessageType<CreateNodeRequest> {
    constructor() {
        super("com.vector.CreateNodeRequest", [
            { no: 1, name: "index", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "mnemonic", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "skipCheckIn", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.CreateNodeRequest
 */
export const CreateNodeRequest = new CreateNodeRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateNodeReply$Type extends MessageType<CreateNodeReply> {
    constructor() {
        super("com.vector.CreateNodeReply", [
            { no: 1, name: "public_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "signer_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "index", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.CreateNodeReply
 */
export const CreateNodeReply = new CreateNodeReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ClearStoreRequest$Type extends MessageType<ClearStoreRequest> {
    constructor() {
        super("com.vector.ClearStoreRequest", [
            { no: 1, name: "admin_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.ClearStoreRequest
 */
export const ClearStoreRequest = new ClearStoreRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RestoreStateRequest$Type extends MessageType<RestoreStateRequest> {
    constructor() {
        super("com.vector.RestoreStateRequest", [
            { no: 1, name: "counterparty_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "chain_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "public_identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message com.vector.RestoreStateRequest
 */
export const RestoreStateRequest = new RestoreStateRequest$Type();
/**
 * @generated ServiceType for protobuf service com.vector.ServerNodeService
 */
export const ServerNodeService = new ServiceType("com.vector.ServerNodeService", [
    { name: "GetPing", options: {}, I: Empty, O: GenericMessageResponse },
    { name: "GetConfig", options: {}, I: Empty, O: Configs },
    { name: "GetStatus", options: {}, I: GetStatusRequest, O: Status },
    { name: "GetChannelState", options: {}, I: ChannelStateRequest, O: FullChannelState },
    { name: "GetChannelStates", options: {}, I: Empty, O: FullChannelStates },
    { name: "GetChannelStateByParticipants", options: {}, I: ChannelStateByParticipantsRequest, O: FullChannelState },
    { name: "GetTransferState", options: {}, I: TransfersRequest, O: FullTransferState },
    { name: "GetTransferStateByRoutingId", options: {}, I: TransferStateByRoutingIdRequest, O: FullTransferState },
    { name: "GetTransferStatesByRoutingId", options: {}, I: TransferStatesByRoutingIdRequest, O: FullTransferStates },
    { name: "GetActiveTransfers", options: {}, I: ActiveTransfersRequest, O: FullTransferStates },
    { name: "GetRegisteredTransfers", options: {}, I: RegisteredTransfersRequest, O: RegisteredTransfers },
    { name: "ClearStore", options: {}, I: ClearStoreRequest, O: Empty },
    { name: "CreateNode", options: {}, I: CreateNodeRequest, O: CreateNodeReply },
    { name: "Setup", options: {}, I: SetupRequest, O: FullChannelState },
    { name: "InternalSetup", options: {}, I: SetupRequest, O: FullChannelState },
    { name: "Deposit", options: {}, I: DepositRequest, O: FullChannelState },
    { name: "SendDepositTx", options: {}, I: DepositTxRequest, O: TxHash },
    { name: "SendRequestCollateral", options: {}, I: DepositRequest, O: FullChannelState },
    { name: "CreateTransfer", options: {}, I: ConditionalTransferRequest, O: FullChannelState },
    { name: "ResolveTransfer", options: {}, I: ResolveTransferRequest, O: FullChannelState },
    { name: "Withdraw", options: {}, I: WithdrawRequest, O: FullChannelState },
    { name: "RestoreState", options: {}, I: RestoreStateRequest, O: FullChannelState },
    { name: "SendDisputeChannelTx", options: {}, I: ChannelStateRequest, O: TxHash },
    { name: "SendDefundChannelTx", options: {}, I: ChannelStateRequest, O: TxHash },
    { name: "SendDisputeTransfer", options: {}, I: TransferRequest, O: TxHash },
    { name: "SendDefundTransfer", options: {}, I: TransferRequest, O: TxHash },
    { name: "IsAliveStream", serverStreaming: true, options: {}, I: Empty, O: IsAlivePayload },
    { name: "SetupStream", serverStreaming: true, options: {}, I: Empty, O: SetupPayload },
    { name: "ConditionalTransferCreatedStream", serverStreaming: true, options: {}, I: Empty, O: ConditionalTransferCreatedPayload },
    { name: "ConditionalTransferResolvedStream", serverStreaming: true, options: {}, I: Empty, O: ConditionalTransferCreatedPayload },
    { name: "DepositReconciledStream", serverStreaming: true, options: {}, I: Empty, O: DepositReconciledPayload },
    { name: "RequestCollateralStream", serverStreaming: true, options: {}, I: Empty, O: RequestCollateralPayload },
    { name: "WithdrawalCreatedStream", serverStreaming: true, options: {}, I: Empty, O: WithdrawalCreatedPayload },
    { name: "WithdrawalResolvedStream", serverStreaming: true, options: {}, I: Empty, O: WithdrawalCreatedPayload },
    { name: "WithdrawalReconciledStream", serverStreaming: true, options: {}, I: Empty, O: WithdrawalReconciledPayload },
    { name: "RestoreStateStream", serverStreaming: true, options: {}, I: Empty, O: SetupPayload },
    { name: "EthProvider", options: {}, I: EthProviderRequest, O: EthProviderReply }
]);
