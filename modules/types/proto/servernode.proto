syntax = "proto3";

import "any.proto";

package com.vector;

// Server Node Service
// Describes the Vector Server Node's interface
service ServerNodeService {
    // general metadata getters
    rpc GetPing (Empty) returns (GenericMessageResponse) {}
    rpc GetConfig (Empty) returns (Configs) {}
    rpc GetStatus (GetStatusRequest) returns (Status) {}
    rpc GetRouterConfig (GetRouterConfigRequest) returns (RouterConfig) {}

    // channel and transfer state getters
    rpc GetChannelState (ChannelStateRequest) returns (FullChannelState) {}
    rpc GetChannelStates (Empty) returns (FullChannelStates) {}
    rpc GetChannelStateByParticipants (ChannelStateByParticipantsRequest) returns (FullChannelState) {}
    rpc GetTransferState (TransfersRequest) returns (FullTransferState) {}
    rpc GetTransferStateByRoutingId (TransferStateByRoutingIdRequest) returns (FullTransferState) {}
    rpc GetTransferStatesByRoutingId (TransferStatesByRoutingIdRequest) returns (FullTransferStates) {}
    rpc GetActiveTransfers (ActiveTransfersRequest) returns (FullTransferStates) {}
    rpc GetRegisteredTransfers (RegisteredTransfersRequest) returns (RegisteredTransfers) {}

    // external interface for server node functionality
    rpc ClearStore (ClearStoreRequest) returns (Empty) {}
    rpc CreateNode (CreateNodeRequest) returns (CreateNodeReply) {}
    rpc Setup (SetupRequest) returns (FullChannelState) {}
    rpc InternalSetup (SetupRequest) returns (FullChannelState) {}
    rpc Deposit (DepositRequest) returns (FullChannelState) {}
    rpc SendDepositTx (DepositTxRequest) returns (TxHash) {}
    rpc SendRequestCollateral (DepositRequest) returns (FullChannelState) {}
    rpc CreateTransfer (ConditionalTransferRequest) returns (FullChannelState) {}
    rpc ResolveTransfer (ResolveTransferRequest) returns (FullChannelState) {}
    rpc Withdraw (WithdrawRequest) returns (FullChannelState) {}
    rpc RestoreState (RestoreStateRequest) returns (FullChannelState) {}

    // dispute methods
    rpc SendDisputeChannelTx (ChannelStateRequest) returns (TxHash) {}
    rpc SendDefundChannelTx (ChannelStateRequest) returns (TxHash) {}
    rpc SendDisputeTransfer (TransferRequest) returns (TxHash) {}
    rpc SendDefundTransfer (TransferRequest) returns (TxHash) {}

    // subscriptions - server to client stream
    rpc IsAliveStream (Empty) returns (stream IsAlivePayload) {}
    rpc SetupStream (Empty) returns (stream SetupPayload) {}
    rpc ConditionalTransferCreatedStream (Empty) returns (stream ConditionalTransferCreatedPayload) {}
    rpc ConditionalTransferResolvedStream (Empty) returns (stream ConditionalTransferCreatedPayload) {}
    rpc DepositReconciledStream (Empty) returns (stream DepositReconciledPayload) {}
    rpc RequestCollateralStream (Empty) returns (stream RequestCollateralPayload) {}
    rpc WithdrawalCreatedStream (Empty) returns (stream WithdrawalCreatedPayload) {}
    rpc WithdrawalResolvedStream (Empty) returns (stream WithdrawalCreatedPayload) {}
    rpc WithdrawalReconciledStream (Empty) returns (stream WithdrawalReconciledPayload) {}
    rpc RestoreStateStream (Empty) returns (stream SetupPayload) {}
    
    // eth provider pass-through
    rpc EthProvider (EthProviderRequest) returns (EthProviderReply) {}
}

// generic defs
message Empty {}

message GenericMessageResponse {
    string message = 1;
}

message TxHash {
    string txHash = 1;
}

// channel update related fields
message CreateUpdateDetails {
    string transfer_id = 1;
    Balance balance = 2;
    string transfer_definition = 3;
    string transfer_timeout = 4;
    google.protobuf.Any transfer_initial_state = 5;
    repeated string transfer_encodings = 6;
    repeated string merkle_proof_data = 7;
    string merkle_root = 8;
    optional google.protobuf.Any meta = 9;
}

message ResolveUpdateDetails {
    string transfer_id = 1;
    string transfer_definition = 2;
    google.protobuf.Any transfer_resolver = 3;
    string merkle_root = 4;
    optional google.protobuf.Any meta = 5;
}

message DepositUpdateDetails {
    string total_deposits_alice = 1;
    string total_deposits_bob = 2;
    optional google.protobuf.Any meta = 3;
}

message SetupUpdateDetails {
    string timeout = 1;
    NetworkContext network_context = 2;
    optional google.protobuf.Any meta = 3;
}

message ChannelUpdate {
    string channel_address = 1;
    string from_identifier = 2;
    string to_identifier = 3;
    string type = 4;
    int32 nonce = 5;
    Balance balance = 6;
    string asset_id = 7;
    oneof details {
        SetupUpdateDetails setup_update_details = 8;
        DepositUpdateDetails deposit_update_details = 9;
        CreateUpdateDetails create_update_details = 10;
        ResolveUpdateDetails resolve_update_details = 11;
    };
    string aliceSignature = 12;
    string bob_signature = 13;
}

// channel state helpers
message Balance {
    repeated string amount = 1;
    repeated string to = 2;
}

message Contractstringes {
    string channel_factory_address = 1;
    string transfer_registry_address = 2;
}

message NetworkContext {
    Contractstringes contract_addresses = 1;
    int32 chain_id = 2;
    string provider_url = 3;
}

// channel state
message FullChannelState {
    string channel_address = 1;
    string alice = 2;
    string bob = 3;
    string alice_identifier = 4;
    string bob_identifier = 5;

    repeated string asset_ids = 6;
    repeated Balance balances = 7;
    repeated string processed_deposits_a = 8;
    repeated string processed_deposits_b = 9;
    repeated string defund_nounces = 10;
    
    int32 nonce = 11;
    string merkle_root = 12;
    bool in_dispute = 13;

    ChannelUpdate latest_update = 14;
    NetworkContext network_context = 15;
    
    string timeout = 16;
}

message FullChannelStates {
    repeated FullChannelState full_channel_state = 1;
}

// transfer states
message FullTransferState {
    string transfer_id = 1;
    
    string channel_address = 2;
    string transfer_definition = 3;
    string initiator = 4;
    string responder = 5;
    string initiator_identifier = 6;
    string responder_identifier = 7;
    string asset_id = 8;
    Balance balance = 9;

    string transfer_timeout = 10;

    string initial_state_hash = 11;
    repeated string transfer_encodings = 12;
    google.protobuf.Any transfer_state = 13;
    google.protobuf.Any transfer_resolver = 14;

    bool in_dispute = 15;
    int32 channel_nonce = 16;

    optional google.protobuf.Any meta = 17;
}

message FullTransferStates {
    repeated FullTransferState full_transfer_state = 1;
}

// requests
message GetStatusRequest {
    string public_identifier = 1;
}

message GetRouterConfigRequest {
    string public_identifier = 1;
    string router_identifier = 2;
}

message ConditionalTransferRequest {
    string public_identifier = 1;
    string channel_address = 2;
    string amount = 3;
    string asset_id = 4;
    string recipient = 5;
    int32 recipient_chainId = 6;
    string recipient_assetId = 7;
    string timeout = 8;
    string type = 9;
    google.protobuf.Any details = 10;
    
    optional google.protobuf.Any meta = 11;
}

message CollateralRequest {
    string public_identifier = 1;
    string channel_address = 2;
    string asset_id = 3;
    string amount = 4;
}

message DepositRequest {
    string public_identifier = 1;
    string channel_address = 2;
    string asset_id = 3;
    
    optional google.protobuf.Any meta = 4;
}

message TransferRequest {
    string public_identifier = 1;
    string transfer_id = 2;
}

message ChannelStateRequest {
    string public_identifier = 1;
    string channel_address = 2;
}  

message DepositTxRequest {
    string channel_address = 1;
    string amount = 2;
    string asset_id = 3;
    int32 chain_id = 4;
    string public_identifier = 5;
}

message SetupRequest {
    string public_identifier = 1;
    string counterparty_identifier = 2;
    int32 chain_id = 3;
    string timeout = 4;
    optional google.protobuf.Any meta = 5;
}

message RegisteredTransfersRequest {
    string public_identifier = 1;    
    int32 chain_id = 2;
}

message ChannelStatesRequest {
    string public_identifier = 1;
}

message ActiveTransfersRequest {
    string public_identifier = 1;
    string channel_address = 2;
}

message  TransferStatesByRoutingIdRequest {
   string public_identifier = 1;
   string channel_address = 2;
   bytes routing_id = 3;
}

message  TransferStateByRoutingIdRequest {
    string public_identifier = 1;
    bytes routing_id = 2;
}

message  TransfersRequest {
    string public_identifier = 1;
    bytes transfer_id = 2;
}

message ChannelStateByParticipantsRequest {
    string public_identifier = 1;
    string counterparty = 2;
    int32 chain_id = 3;
}

message WithdrawRequest {
    string public_identifier = 1;
    string channel_address = 2;
    string amount = 3;
    string asset_id = 4;
    string recipient = 5;
    string fee = 6;
    string call_to = 7;
    string call_data = 8;

    optional google.protobuf.Any meta = 9;
}

message ResolveTransferRequest {
    string public_identifier = 1;
    string channel_address = 2;
    bytes transfer_id = 3;
    google.protobuf.Any transfer_resolver = 4;

    optional google.protobuf.Any meta = 5;
}

message Body {
    string method = 1;
    google.protobuf.Any params = 2;
}
message EthProviderRequest {
    int32 chain_id = 1;
    Body body = 2;
}

// responses
message RestoreStateReply {
    string channel_address = 1;
}

message  WithdrawReply {
    string channel_address = 1;
    bytes transfer_id = 2;
    bytes transaction_hash = 3;
}

message EthProviderReply {
    google.protobuf.Any response = 1;
}

message Configs {
    repeated Config config = 1;
}
message Config {
    int32 index = 1;
    string public_identifier = 2;
    string signer_address = 3;
}

message AllowedSwaps {
    int32 from_chain_id = 1;
    int32 to_chain_id = 2;
    string from_asset_id = 3;
    string to_asset_id = 4;
    string price_type = 5;
    string hardcoded_rate = 6;
}
message RouterConfig {
    repeated int32 supported_chains = 1;
    repeated AllowedSwaps allowed_swaps = 2;
}

message ProviderSyncing {
    bool syncing = 1;
    string starting_block = 2;
    string current_block = 3;
    string highest_block = 4;
}
message Status {
    map<int32, ProviderSyncing> provider_syncing = 1;
    string public_identifier = 2;
    string signer_address = 3;
    string version = 4;
}

message RegisteredTransfer {
    string state_encoding = 1;
    string resolver_encoding = 2;
    string definition = 3;
    string name = 4;
    string encoded_cancel = 5;
}
message RegisteredTransfers {
    repeated RegisteredTransfer registered_transfer = 1;
}

// event payloads
message IsAlivePayload {
    string channel_address = 1;
    string alice_identifier = 2;
    string bob_identifier = 3;
    int32 chain_id = 4;
    optional bool skip_check_in = 5;
}

message SetupPayload {
    string channel_address = 1;
    string alice_identifier = 2;
    string bob_identifier = 3;
    int32 chain_id = 4;
    optional google.protobuf.Any meta = 5;
}

message ConditionalTransferCreatedPayload {
    string channel_address = 1;
    string alice_identifier = 2;
    string bob_identifier = 3;
    FullTransferState transfer = 4;
    Balance channel_balance = 5;
    string condition_type = 6;
    repeated string active_transfer_ids = 7;
    optional google.protobuf.Any meta = 8;
}

message DepositReconciledPayload {
    string channel_address = 1;
    string alice_identifier = 2;
    string bob_identifier = 3;
    string asset_id = 4;
    Balance channel_balance = 5;
    optional google.protobuf.Any meta = 6;
}

message RequestCollateralPayload {
    string channel_address = 1;
    string alice_identifier = 2;
    string bob_identifier = 3;
    string asset_id = 4;
    optional string amount = 5;
    optional google.protobuf.Any meta = 6;
}

message WithdrawalCreatedPayload {
    string channel_address = 1;
    string alice_identifier = 2;
    string bob_identifier = 3;
    FullTransferState transfer = 4;
    string fee = 5;
    string asset_id = 6;
    string amount = 7;
    string recipient = 8;
    string call_to = 9;
    string call_data = 10;
    Balance channel_balance = 11;
    optional google.protobuf.Any meta = 12;
}

message WithdrawalReconciledPayload {
    string channel_address = 1;
    string alice_identifier = 2;
    string bob_identifier = 3;
    string transaction_hash = 4;
    string transfer_id = 5;
    optional google.protobuf.Any meta = 6;
}

message CreateNodeRequest {
    int32 index = 1;
    string mnemonic  = 2;
    bool skipCheckIn = 3;
}

message CreateNodeReply {
    string public_identifier = 1;
    string signer_address  = 2;
    int32 index = 3;    
}

message ClearStoreRequest {
    string admin_token = 1;
}

message RestoreStateRequest {
    string counterparty_identifier = 1;
    string chain_id = 2;
    string public_identifier = 3;
}